definitions:
  auth.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  auth.LoginResponse:
    properties:
      token:
        type: string
    type: object
  auth.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  auth.RegisterResponse:
    properties:
      token:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  link.Link:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      hash:
        type: string
      id:
        type: integer
      stats:
        items:
          $ref: '#/definitions/stat.Stat'
        type: array
      updatedAt:
        type: string
      url:
        type: string
    type: object
  link.LinkCreateRequest:
    properties:
      url:
        type: string
    required:
    - url
    type: object
  link.LinkResponse:
    properties:
      createdAt:
        type: string
      hash:
        type: string
      id:
        type: integer
      updatedAt:
        type: string
      url:
        type: string
    type: object
  link.LinkUpdateRequest:
    properties:
      hash:
        type: string
      url:
        type: string
    required:
    - url
    type: object
  res.ErrorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  res.PaginationResponse-link_LinkResponse:
    properties:
      count:
        type: integer
      items:
        items:
          $ref: '#/definitions/link.LinkResponse'
        type: array
    type: object
  stat.Stat:
    properties:
      clicks:
        type: integer
      createdAt:
        type: string
      date:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      link_id:
        type: integer
      updatedAt:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: torigetz@yandex.ru
    name: Daniil Benger (tori-getz)
    url: http://t.me/torigetz/
  title: URL Shortener API
  version: "1.0"
paths:
  /{hash}:
    get:
      description: Переходит по короткой ссылке
      parameters:
      - description: Хеш ссылки (Hash)
        in: path
        name: hash
        required: true
        type: integer
      responses:
        "307":
          description: Temporary Redirect
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/res.ErrorResponse'
      summary: Переход по короткой ссылке
      tags:
      - Link
  /auth/login:
    post:
      consumes:
      - application/json
      description: Авторизует пользователя и возвращает токен
      parameters:
      - description: Данные для авторизации
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.LoginResponse'
      summary: Авторизация пользователя
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Регистрирует пользователя и возвращает токен
      parameters:
      - description: Данные для авторизации
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/auth.RegisterResponse'
      summary: Регистрация пользователя
      tags:
      - Auth
  /link:
    get:
      consumes:
      - application/json
      description: Получает список коротких ссылок
      parameters:
      - description: Лимит (количество ссылок на странице)
        in: query
        name: limit
        required: true
        type: integer
      - description: Смещение (начальная позиция)
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.PaginationResponse-link_LinkResponse'
        "400":
          description: Неверные параметры запроса
          schema:
            $ref: '#/definitions/res.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/res.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Получение списка коротких ссылок
      tags:
      - Link
    post:
      consumes:
      - application/json
      description: Создает короткую ссылку
      parameters:
      - description: Данные для создания ссылки
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/link.LinkCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/link.Link'
        "400":
          description: Неверные параметры запроса
          schema:
            $ref: '#/definitions/res.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/res.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Создание короткой ссылки
      tags:
      - Link
  /link/{hash}:
    delete:
      consumes:
      - application/json
      description: Удаляет короткую ссылку
      parameters:
      - description: Идентификатор ссылки (ID)
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Неверные параметры запроса
          schema:
            $ref: '#/definitions/res.ErrorResponse'
        "404":
          description: Ссылка не найдена
          schema:
            $ref: '#/definitions/res.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/res.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Удаление короткой ссылки
      tags:
      - Link
  /link/{id}:
    put:
      consumes:
      - application/json
      description: Обновляет короткую ссылку
      parameters:
      - description: Идентификатор ссылки (ID)
        in: path
        name: id
        required: true
        type: integer
      - description: Данные для обновления ссылки
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/link.LinkUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/link.Link'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/res.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Обновление короткой ссылки
      tags:
      - Link
  /stat:
    get:
      consumes:
      - application/json
      description: Возвращает статистику за указанный период, сгруппированную по дням
        или месяцам.
      parameters:
      - description: Начальная дата в формате YYYY-MM-DD
        in: query
        name: from
        required: true
        type: string
      - description: Конечная дата в формате YYYY-MM-DD
        in: query
        name: to
        required: true
        type: string
      - description: 'Группировка: day (по дням) или month (по месяцам)'
        in: query
        name: by
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Статистика
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Неверные параметры запроса
          schema:
            $ref: '#/definitions/res.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/res.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Получить статистику
      tags:
      - Stats
securityDefinitions:
  BearerAuth:
    description: Введите "Bearer <токен>"
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
